// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioTracker.PortfolioDbContext;

#nullable disable

namespace PortfolioTracker.Migrations
{
    [DbContext(typeof(PortfolioTrackerContext))]
    partial class PortfolioTrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("PortfolioTracker.Model.Portfolio", b =>
                {
                    b.Property<int>("PortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DividendYield")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ExpectedDividendAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PortfolioName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Result")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("TEXT");

                    b.HasKey("PortfolioId");

                    b.ToTable("portfolios");
                });

            modelBuilder.Entity("PortfolioTracker.Model.PortfolioTicker", b =>
                {
                    b.Property<int>("PortfolioTickerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AverageSharePirce")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfShares")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TickerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TickerSymbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PortfolioTickerId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("portfolioTickers");
                });

            modelBuilder.Entity("PortfolioTracker.Model.Ticker", b =>
                {
                    b.Property<int>("TickerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DividendPerShare")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DividendYield")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SharePrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("TickerSymbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TickerId");

                    b.ToTable("tickers");
                });

            modelBuilder.Entity("PortfolioTracker.Model.PortfolioTicker", b =>
                {
                    b.HasOne("PortfolioTracker.Model.Portfolio", null)
                        .WithMany("TickerList")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PortfolioTracker.Model.Portfolio", b =>
                {
                    b.Navigation("TickerList");
                });
#pragma warning restore 612, 618
        }
    }
}
